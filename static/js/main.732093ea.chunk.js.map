{"version":3,"sources":["fbase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Xweet.js","components/XweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Profile","refreshUser","userObj","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","photo","profilePhoto","setProfilePhoto","onSubmit","event","a","preventDefault","profilePhotoURL","updateProfile","fileRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","photoURL","className","htmlFor","src","alt","icon","faUser","faPen","color","id","type","accept","value","onChange","theFile","target","files","reader","FileReader","Boolean","readAsDataURL","onloadend","finishedEvent","result","currentTarget","placeholder","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","size","faGoogle","faGithub","Xweet","xweetObj","isOwner","editing","setEditing","text","newXweet","setNewXweet","url","newURL","setNewURL","onDeleteClick","window","confirm","doc","delete","refFromURL","toggleEditing","update","faPencilAlt","faTrash","faEdit","date","createdAt","format","moment","fromNow","XweetFactory","xweet","setXweet","attachment","setAttachment","attachmentURL","Date","now","authorId","collection","add","maxLength","faPlus","style","backgroundImage","faTimes","Home","xweets","setXweets","getMyXweets","where","orderBy","onSnapshot","snapshot","xweetArray","docs","map","data","useEffect","Navigation","to","replace","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.732093ea.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage'; \n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n  };\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase\n\nexport const authService = firebase.auth()\n\nexport const dbService = firebase.firestore()\n\nexport const storageService = firebase.storage()","import React, { useState } from 'react'\nimport { authService, storageService } from 'fbase'\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen, faUser } from \"@fortawesome/free-solid-svg-icons\";\n\n\n\nexport default function Profile({ refreshUser, userObj }) {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n    const [profilePhoto, setProfilePhoto] = useState(userObj.photo)\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/')\n    }\n    \n    const onChange = (event) =>{\n        const {target: {value}} = event;\n        setNewDisplayName(value)\n    }    \n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let profilePhotoURL = \"\";\n        if (userObj.displayName !== newDisplayName){\n            await userObj.updateProfile({\n                displayName: newDisplayName\n            })\n        }\n        if (userObj.photo !== profilePhoto){\n            const fileRef = storageService.ref().child(`${userObj.uid}/profilePhoto/${uuidv4()}`);\n            const response = await fileRef.putString(profilePhoto, \"data_url\");\n            profilePhotoURL = await response.ref.getDownloadURL();\n            await userObj.updateProfile({\n                photoURL: profilePhotoURL\n            })\n\n        }\n            \n        refreshUser();\n        \n    }\n\n\n    const onPhotoChange = (event) =>{\n        const {target: {files}} = event;\n        const theFile = files[0]\n        const reader = new FileReader();\n        \n        if(Boolean(theFile)){\n            reader.readAsDataURL(theFile);\n        }\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setProfilePhoto(result)\n        }\n    }\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"profile-container\">\n\n          <form onSubmit={onSubmit} className=\"profileForm\">\n            <label htmlFor=\"attach-photo\">\n                <div className='profilePhoto-container'>\n                    { profilePhoto ? (\n                        <img className='profile-photo' src={profilePhoto} alt='' />\n                    ):(\n                        <FontAwesomeIcon className='profile-user' icon={faUser} />\n                    )}\n                    <div className='edit-icon'>\n                        <FontAwesomeIcon icon={faPen} color='white'/>     \n                    </div>\n                </div>\n            </label>\n            <input\n              id=\"attach-photo\"\n              type=\"file\"\n              accept=\"image/*\"\n              value=''\n              onChange={onPhotoChange}\n            />\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Display Name\"\n              value={newDisplayName}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" />\n          </form>\n          <button className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n            Log Out\n          </button>\n        </div>\n      </div>\n    );\n}\n","import React, { useState } from 'react'\nimport { authService } from 'fbase'\n\n\nexport default function AuthForm() {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [newAccount, setNewAccount] = useState(false)\n    const [error, setError] = useState('')\n\n    const onChange = (event) => {\n        const { target: { name, value } } = event;\n\n        if (name === 'email') return setEmail(value)\n        else if (name === 'password') return setPassword(value);\n    }\n\n    const onSubmit = async (event) => {\n      event.preventDefault();\n      try {\n        if (newAccount) {\n          await authService.createUserWithEmailAndPassword(\n            email,\n            password\n          );\n        } else {\n          await authService.signInWithEmailAndPassword(email, password);\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n    };   \n\n    const toggleAccount = () => setNewAccount((prev) => !prev)\n    \n    return (\n        <>\n            <form onSubmit={onSubmit} className='container'>\n          <input \n            className='authInput'\n            name='email'\n            type=\"text\" \n            placeholder=\"Email\" \n            required \n            value={email}\n            onChange={onChange}\n\n          />\n          <input \n            className='authInput' \n            name='password'\n            type=\"password\" \n            placeholder=\"Password\" \n            required \n            value={password}\n            onChange={onChange}\n\n          />\n          <input \n            type=\"submit\" \n            value={newAccount? 'Create Account' : 'Log In'} \n            className='authInput authSubmit'\n            />\n          {error && <span className='authError'> {error} </span>}\n        </form>\n        <span className='authSwitch' onClick={toggleAccount}>{newAccount ? 'Sign In' : 'Create Account'}</span>\n            \n        </>\n    )\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport { firebaseInstance, authService } from 'fbase'\nimport AuthForm from \"../components/AuthForm\"\n\nexport default function Auth() {\n\n\n    const onSocialClick = async (event) => {\n        const {target:{name}} = event;\n        let provider;\n\n        if(name === 'google'){\n            provider = new firebaseInstance.auth.GoogleAuthProvider(); \n        }\n        else if(name === 'github'){\n            provider = new firebaseInstance.auth.GithubAuthProvider(); \n        }\n\n        await authService.signInWithPopup(provider);\n    }\n\n    return (\n      <div>\n        <div className=\"authContainer\">\n          <FontAwesomeIcon\n            className='logo'\n            icon={faTwitter}\n            size=\"3x\"\n          />\n          <AuthForm/>\n          <div className='authBtns'>\n            <button className='authBtn' onClick={onSocialClick} name='google'>Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\n            <button className='authBtn' onClick={onSocialClick} name='github'>Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\n          </div>\n        </div>\n      </div>\n    );\n}\n","import { dbService, storageService } from 'fbase';\nimport React, { useState }from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport moment from 'moment';\nimport Moment from 'react-moment';\n\nexport default function Xweet({ userObj, xweetObj, isOwner }) {\n    const [editing, setEditing] = useState(false)\n    const [newXweet, setNewXweet] = useState(xweetObj.text)\n    const [newURL, setNewURL] = useState(xweetObj.url)\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure to delete this xweet?\")\n        if (ok) {\n            await dbService.doc(`xweets/${xweetObj.id}`).delete();\n            if(xweetObj.url){\n              await storageService.refFromURL(xweetObj.url).delete()\n            }\n        }\n    }\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const { target: {value} } = event;\n        setNewXweet(value)\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`xweets/${xweetObj.id}`).update({\n            text: newXweet,\n            url: newURL\n        })\n        setEditing(false)\n    }\n\n    const onPhotoChange = (event) =>{\n      const {target: {files}} = event;\n      const theFile = files[0]\n      const reader = new FileReader();\n      \n      if(Boolean(theFile)){\n          reader.readAsDataURL(theFile);\n      }\n      reader.onloadend = (finishedEvent) => {\n          const {currentTarget: {result}} = finishedEvent;\n          setNewURL(result)\n      }\n  }\n  \n    return (\n      <div className=\"xweet\">\n        {isOwner && (\n          <div className=\"xweet-label\">\n            <div className=\"user-info\">\n              <img id=\"profile-photo\" src={userObj.photo} alt=\"\" />\n              <span>{userObj.displayName}</span>\n              <h5>@{userObj.uid}</h5>\n            </div>\n            <div className=\"xweet-icons\">\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n            </div>\n          </div>\n        )}\n        {editing ? (\n          <>\n            <form onSubmit={onSubmit}>\n              <div className='xweet-edit'>\n                <textarea\n                  type=\"text\"\n                  placeholder=\"New content is...\"\n                  value={newXweet}\n                  onChange={onChange}\n                  required\n                />\n              {xweetObj.url && (\n                <>\n                  <label htmlFor=\"input-photo-edit\">\n                    <img className=\"xweet-photo photo-edit\" src={newURL} alt=\"\" />\n                    <FontAwesomeIcon className='edit-icon' icon={faEdit} size='2x' />\n                  </label>\n                  <input\n                    id=\"input-photo-edit\"\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={onPhotoChange}\n                  />\n                </>\n              )}\n              </div>\n              \n              <div className=\"xweet-footer\">\n                <input type=\"submit\" value=\"Update Xweet\" />\n                <button onClick={toggleEditing}>Cancel</button>\n              </div>\n            </form>\n          </>\n        ) : (\n          <>\n            <h4>{xweetObj.text}</h4>\n            {xweetObj.url && (\n              <img className=\"xweet-photo\" src={xweetObj.url} alt=\"\" />\n            )}\n            <div className=\"xweet-footer\">\n              <Moment date={xweetObj.createdAt} format=\"MMM DD YYYY, hh:mm A\" />\n              <span>{moment(xweetObj.createdAt).fromNow()}</span>\n            </div>\n          </>\n        )}\n      </div>\n    );\n}\n","import React, { useState } from 'react'\nimport { dbService, storageService } from 'fbase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n \n\nexport default function XweetFactory( {userObj} ) {\n    const [xweet, setXweet] = useState(\"\")\n    const [attachment, setAttachment] = useState('')\n    const reader = new FileReader();\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentURL = \"\";\n        if (attachment !== \"\"){\n            const fileRef = storageService.ref().child(`${userObj.uid}/attachments/${uuidv4()}`);\n            const response = await fileRef.putString(attachment, \"data_url\");\n            attachmentURL = await response.ref.getDownloadURL();\n        }\n        const xweetObj = {\n            text: xweet,\n            createdAt: Date.now(),\n            authorId: userObj.uid,\n            url: attachmentURL\n        }\n        await dbService.collection(\"xweets\").add(xweetObj);\n        setXweet('');\n        setAttachment('');\n    }\n    const onChange = (event) => {\n        const {target:{ value }} = event\n        setXweet(value)\n    }\n    \n    const onFileChange = (event) => {\n        const {target:{files}} = event;\n        const theFile = files[0];\n    \n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setAttachment(result)\n        }\n        if(Boolean(theFile)){\n            reader.readAsDataURL(theFile);\n        }\n \n    };\n\n    const onClearAttachment = () => {\n        setAttachment(\"\");\n    }\n\n    return (\n\n        <form onSubmit={onSubmit} className=\"factory-form\">\n            <div className=\"factoryInput-container\">\n                <input\n                className=\"factoryInput-input\"\n                value={xweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n                />\n                <input\n                className=\"factoryInput-arrow\"\n                type=\"submit\"\n                value=\"&rarr;\"\n                />\n            </div>\n\n          <label htmlFor=\"attach-file\" className=\"factoryInput-label\">\n            <span>Add photos</span>\n            <FontAwesomeIcon icon={faPlus} />\n          </label>\n\n          <input \n            id=\"attach-file\"\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={onFileChange}\n            />\n            \n          {attachment && (\n            <div className=\"factoryForm-attachment\">\n                <img\n                    alt=''\n                    src={attachment}\n                    style={{\n                        backgroundImage: attachment,\n                    }}\n                />\n                <div className=\"factoryForm-clear\" onClick={onClearAttachment}>\n                    <span>Remove</span>\n                    <FontAwesomeIcon icon={faTimes} />\n                </div>\n            </div>\n            )}\n        </form>\n    )\n}\n","import { dbService } from 'fbase';\nimport React, { useState, useEffect }from 'react'\nimport Xweet from '../components/Xweet'\nimport XweetFactory from '../components/XweetFactory'\n\nexport default function Home({ userObj }) {\n\n    const [xweets, setXweets] = useState([])\n\n    const getMyXweets = async () => {\n        await dbService\n            .collection('xweets')\n            .where('authorId', '==', userObj.uid)\n            .orderBy('createdAt', 'desc')\n            .onSnapshot((snapshot)=>{\n                const xweetArray = snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    ...doc.data()\n                }));\n                setXweets(xweetArray)\n            });\n    }\n\n\n    useEffect(() => {\n        getMyXweets()\n\n        return(\n            setXweets([])\n        )\n    },[]) \n\n    return ( \n        <div className='container'> \n            <XweetFactory userObj={userObj}/>\n            <div className='xweet-container'>\n                {xweets.map((xweet) => (\n                        <Xweet userObj={userObj} key={xweet.id} xweetObj={xweet} isOwner={xweet.authorId === userObj.uid}/>\n                        ))\n                }\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function Navigation({ userObj }) {\n\n    return (\n      <nav>\n        <ul>\n          <li>\n            <Link to=\"/\" replace>\n                <FontAwesomeIcon className='navIcon' icon={faTwitter} size=\"2x\" />\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/profile\" replace>\n                { userObj.photo ? \n                <div className='user-photo'>\n                      <img src={userObj.photo} alt=''/>\n                </div>\n                : \n                <FontAwesomeIcon className='navIcon' icon={faUser} size=\"2x\" />\n                }\n                { userObj.displayName ? (\n                  <span><strong>{userObj.displayName}</strong>'s Profile</span>\n                ):(\n                  <span>Profile</span>\n                )}\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n} \n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Profile from 'routes/Profile';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from './Navigation'\n\nexport default function AppRouter({ refreshUser ,isLoggedIn, userObj }) {\n    return (\n      <Router>\n        {isLoggedIn && <Navigation userObj={userObj} />}\n        <Switch>\n          {isLoggedIn ? (\n            <>\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile refreshUser={refreshUser} userObj={userObj} />\n              </Route>\n            </>\n          ) : (\n            <>\n              <Route exact path=\"/\">\n                <Auth />\n              </Route>\n            </>\n          )}\n        </Switch>\n      </Router>\n    );\n}","import React, { useState, useEffect } from 'react'\nimport AppRouter from './Router'\nimport { authService } from 'fbase'\n\nfunction App() {\n  const [init, setInit] = useState(false)\n  const [userObj, setUserObj] = useState(null)\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if(user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          photo: user.photoURL,\n          updateProfile: (args) => user.updateProfile(args)\n        })\n      }\n      else { \n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, [])\n\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photo: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      {init ? <AppRouter \n        refreshUser={refreshUser}\n        isLoggedIn={Boolean(userObj)} \n        userObj={userObj}\n        /> \n        : 'Loading...'}\n      <footer>&copy; {new Date().getFullYear()} Xwitter by Taesoo Kang </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './assets/scss/base.scss'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}