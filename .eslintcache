[{"/Users/t.kang/Desktop/xwitter/src/index.js":"1","/Users/t.kang/Desktop/xwitter/src/components/Router.js":"2","/Users/t.kang/Desktop/xwitter/src/routes/Home.js":"3","/Users/t.kang/Desktop/xwitter/src/routes/Auth.js":"4","/Users/t.kang/Desktop/xwitter/src/components/App.js":"5","/Users/t.kang/Desktop/xwitter/src/fbase.js":"6","/Users/t.kang/Desktop/xwitter/src/components/Navigation.js":"7","/Users/t.kang/Desktop/xwitter/src/routes/Profile.js":"8","/Users/t.kang/Desktop/xwitter/src/components/Xweet.js":"9","/Users/t.kang/Desktop/xwitter/src/components/xweetFactory.js":"10","/Users/t.kang/Desktop/xwitter/src/components/XweetFactory.js":"11","/Users/t.kang/Desktop/xwitter/src/components/AuthForm.js":"12"},{"size":243,"mtime":1611779104608,"results":"13","hashOfConfig":"14"},{"size":908,"mtime":1611696268096,"results":"15","hashOfConfig":"14"},{"size":1050,"mtime":1612163323898,"results":"16","hashOfConfig":"14"},{"size":1298,"mtime":1611785277485,"results":"17","hashOfConfig":"14"},{"size":1185,"mtime":1612029127764,"results":"18","hashOfConfig":"14"},{"size":728,"mtime":1611691525494,"results":"19","hashOfConfig":"14"},{"size":996,"mtime":1611864758610,"results":"20","hashOfConfig":"14"},{"size":3405,"mtime":1612129003704,"results":"21","hashOfConfig":"14"},{"size":2618,"mtime":1612164475381,"results":"22","hashOfConfig":"14"},{"size":2246,"mtime":1611746927966,"results":"23","hashOfConfig":"14"},{"size":3107,"mtime":1612128644801,"results":"24","hashOfConfig":"14"},{"size":1988,"mtime":1611784311043,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"11szffd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/t.kang/Desktop/xwitter/src/index.js",[],["52","53"],"/Users/t.kang/Desktop/xwitter/src/components/Router.js",[],"/Users/t.kang/Desktop/xwitter/src/routes/Home.js",[],"/Users/t.kang/Desktop/xwitter/src/routes/Auth.js",[],"/Users/t.kang/Desktop/xwitter/src/components/App.js",[],"/Users/t.kang/Desktop/xwitter/src/fbase.js",[],"/Users/t.kang/Desktop/xwitter/src/components/Navigation.js",[],"/Users/t.kang/Desktop/xwitter/src/routes/Profile.js",["54"],"import React, { useState, useEffect } from 'react'\nimport { authService, dbService, storageService } from 'fbase'\nimport { useHistory } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\n\n\n\nexport default function Profile({ refreshUser, userObj }) {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName)\n    const [profilePhoto, setProfilePhoto] = useState(userObj.photo)\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push('/')\n    }\n    \n    const onChange = (event) =>{\n        const {target: {value}} = event;\n        setNewDisplayName(value)\n    }    \n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let profilePhotoURL = \"\";\n        if (profilePhoto !== ''){\n            \n        } \n        if (userObj.displayName !== newDisplayName){\n            await userObj.updateProfile({\n                displayName: newDisplayName\n            })\n        }\n        if (userObj.photo !== profilePhoto){\n            const fileRef = storageService.ref().child(`${userObj.uid}/profilePhoto/${uuidv4()}`);\n            const response = await fileRef.putString(profilePhoto, \"data_url\");\n            profilePhotoURL = await response.ref.getDownloadURL();\n            await userObj.updateProfile({\n                photoURL: profilePhotoURL\n            })\n\n            console.log(userObj.photo)\n        }\n            \n        refreshUser();\n        \n    }\n\n    const getMyXweets = async () => {\n        await dbService\n            .collection('xweets')\n            .where('authorId', '==', userObj.uid)\n            .orderBy('createdAt')\n            .get();\n         \n    }\n\n    const onPhotoChange = (event) =>{\n        const {target: {files}} = event;\n        const theFile = files[0]\n        const reader = new FileReader();\n        \n        if(Boolean(theFile)){\n            reader.readAsDataURL(theFile);\n        }\n        reader.onloadend = (finishedEvent) => {\n            const {currentTarget: {result}} = finishedEvent;\n            setProfilePhoto(result)\n        }\n    }\n\n    useEffect(() => {\n        getMyXweets();\n    })\n\n\n    return (\n      <div className=\"container\">\n        <div className=\"profile-container\">\n\n          <form onSubmit={onSubmit} className=\"profileForm\">\n            <label htmlFor=\"attach-photo\">\n                <div className='profilePhoto-container'>\n                    <img src={profilePhoto} />\n                    <div className='edit-icon'>\n                        <FontAwesomeIcon icon={faPen} color='white'/>       \n                    </div>\n                </div>\n            </label>\n            <input\n              id=\"attach-photo\"\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={onPhotoChange}\n            />\n            <input\n              onChange={onChange}\n              type=\"text\"\n              placeholder=\"Display Name\"\n              value={newDisplayName}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" />\n          </form>\n          <button className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n            Log Out\n          </button>\n        </div>\n      </div>\n    );\n}\n","/Users/t.kang/Desktop/xwitter/src/components/Xweet.js",[],"/Users/t.kang/Desktop/xwitter/src/components/xweetFactory.js",[],"/Users/t.kang/Desktop/xwitter/src/components/XweetFactory.js",[],"/Users/t.kang/Desktop/xwitter/src/components/AuthForm.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":86,"column":21,"nodeType":"61","endLine":86,"endColumn":47},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]